[global_tags]
  user = "$USER"
  machine_uuid = "${MACHINE_UUID}"
  panisift_agent_version = "${PANSIFT_AGENT_VERSION}"
[agent]
  interval = "30s"
  round_interval = false
  metric_batch_size = 1000
  metric_buffer_limit = 1000000
  collection_jitter = "5s"
  flush_interval = "60s"
  flush_jitter = "10s"
  precision = "1ns"
  debug = true
  quiet = false
  hostname = ""
  omit_hostname = false
  logfile = "${PANSIFT_LOGS}/telegraf.log"
  logfile_rotation_interval = "1d"
  logfile_rotation_max_size = "10MB"
  logfile_rotation_max_archives = 7
#[[outputs.influxdb]]
[[outputs.influxdb_v2]]    
  urls = ["${PANSIFT_INGEST}"]
  token = "${PANSIFT_TOKEN}"
  organization = "pansift"
  bucket = "${PANSIFT_UUID}"
  # Due to our load balancing and not wanting to add CA files locally on client we're skipping TLS verification.
  # Users can examine the endpoint themselves if necessary.
  insecure_skip_verify = true
  user_agent = "pansift-${PANSIFT_UUID}"
[[inputs.exec]]
  # Machine Metrics -m
  commands = ['bash -c "\"$PANSIFT_SCRIPTS\"/osx_default_script.sh -m"']
  interval= "1h"
  timeout = "30s"
  data_format = "influx"
[[inputs.exec]]
  # Network Metrics -n
  commands = ['bash -c "\"$PANSIFT_SCRIPTS\"/osx_default_script.sh -n"']
  interval= "30s"
  timeout = "29s"
  data_format = "influx"
[[inputs.exec]]
  # HTTP Metrics -w seeded from conf file
  commands = ['bash -c "\"$PANSIFT_SCRIPTS\"/osx_default_script.sh -w"']
  interval= "5m"
  timeout = "290s"
  data_format = "influx"
[[inputs.exec]]
 # WLAN SCAN Metrics -n
 commands = ['bash -c "\"$PANSIFT_SCRIPTS\"/osx_default_script.sh -s"']
 interval= "15m"
 timeout = "1m"
 data_format = "influx"
[[inputs.exec]]
 # ASN Trace Metrics -t
 commands = ['bash -c "\"$PANSIFT_SCRIPTS\"/osx_default_script.sh -t"']
 interval= "20m"
 timeout = "300s"
 data_format = "influx"
[[inputs.disk]]
  interval = "20m"
  name_prefix = "pansift_osx_default_"
  mount_points = ["/"]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
[[inputs.system]]
  # Takes the interval from the main agent config.
  name_prefix = "pansift_osx_default_"
  interval= "5m"
[[inputs.cpu]]
  name_prefix = "pansift_osx_default_"
  ## Whether to report per-cpu stats or not
  percpu = false
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics.
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states.
  report_active = true
[[inputs.tail]]
  # Takes the interval from the main agent config.
  files = ["${PANSIFT_LOGS}/pansift_annotations.log"]
  data_format = "influx"
#[[inputs.diskio]]
[[inputs.mem]]
  name_prefix = "pansift_osx_default_"
	interval = "1m"
[[inputs.net]]
  name_prefix = "pansift_osx_default_"
	interfaces = ["en*"]
	interval = "1m"
#[[inputs.processes]]
  # This is not very useful, only counts of processes not names or descriptions
  #name_prefix = "pansift_osx_default_"
